---
http_interactions:
- request:
    method: get
    uri: https://www.co-berlin.org/en/program/calendar
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Tue, 21 Feb 2023 22:10:37 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Cache-Control:
      - must-revalidate, no-cache, private
      X-Drupal-Dynamic-Cache:
      - UNCACHEABLE
      X-Ua-Compatible:
      - IE=edge
      Content-Language:
      - en
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Expires:
      - Sun, 19 Nov 1978 05:00:00 GMT
      X-Generator:
      - Drupal 9 (https://www.drupal.org)
      X-Cache-Status:
      - MISS
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 21 Feb 2023 22:10:37 GMT
recorded_with: VCR 3.0.3
